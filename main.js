const header = document.querySelector("header");
const main = document.querySelector("main");

// Function f칬r utloggad hemsidan ska se ut
function logInPage() {
    const nameInput = document.createElement("input");
    nameInput.placeholder = "Anv칛ndare namn";
    nameInput.className = "padding";

    const passWordInput = document.createElement("input");
    passWordInput.placeholder = "L칬senord";
    passWordInput.className = "padding";

    const loginBtn = document.createElement("button");
    loginBtn.textContent = "Logga in";
    loginBtn.className = "padding hover";

    const newUser = document.createElement("button");
    newUser.textContent = "Ny Anv칛ndare";
    newUser.className = "padding hover NewU";

    header.append(nameInput, passWordInput, loginBtn, newUser);

    const mainText = document.createElement("h2");
    mainText.textContent = "V칛lkommen logga in eller registrera dig 游땕";

    main.appendChild(mainText);

    loginBtn.addEventListener("click", async () => {
        const nameInputValue = nameInput.value;
        const passWordInputValue = passWordInput.value;
        if (nameInputValue == "" && passWordInputValue == "") {
            mainText.textContent = `Fyll in den nya anv칛ndarens namn och l칬senordet sen logga in游땕`;
            return;
        } else if (nameInputValue != "" && passWordInputValue == "" ||
            nameInputValue == "" && passWordInputValue != "") {
            mainText.textContent = "OBS! N친got saknas, f칬rs칬k igen";
            return;
        } else {
            let User = {
                userName: nameInputValue,
                passWord: passWordInputValue
            };

            let respons = await fetch("https://myloginbackend.herokuapp.com/logIn", {
                method: 'post',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(User)
            });
            let data = await respons.json();
            console.log("logIn ", data);

            if (data.mes === 'error') {
                mainText.textContent = "OBS! Har du gl칬md l칬senordet?";
            } else {
                localStorage.setItem('usersId', JSON.stringify(data.userId));
                localStorage.setItem('userName', JSON.stringify(data.userName));
                location.reload();
            }
        }

    });
    newUser.addEventListener("click", async () => {
        const nameInputValue = nameInput.value;
        const passWordInputValue = passWordInput.value;
        if (nameInputValue == "" && passWordInputValue == "") {
            mainText.textContent = `Fyll in den nya anv칛ndarens namn och l칬senordet sen trycker du Ny Anv칛ndare 游땕`;
            return;
        } else if (nameInputValue != "" && passWordInputValue == "" ||
            nameInputValue == "" && passWordInputValue != "") {
            mainText.textContent = "OBS! N친got saknas, f칬rs칬k igen";
            return;
        }
        else {
            let User = {
                userName: nameInputValue,
                passWord: passWordInputValue
            };

            let respons = await fetch("https://myloginbackend.herokuapp.com/createUser", {
                method: 'post',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(User)
            });
            let data = await respons.json();
            console.log("logIn ", data);

            if (data.mes === 'error you have') {
                mainText.textContent = `Du har redan inloggnings uppgifter Logga bara in Tack 游땙`;
            } else {
                mainText.textContent = "Nu kan du logga in med dem nya uppgifterna 游녨";
            }
        }
    });
}
// Function f칬r hur logad ut hemsida skulle kunna se ut
function logOutPage() {
    let userName = JSON.parse(localStorage.getItem('userName'));
    const logOutBtn = document.createElement("button");
    logOutBtn.textContent = "Logga ut";
    logOutBtn.className = "padding hover";

    header.appendChild(logOutBtn);

    const mainText = document.createElement("h2");
    mainText.textContent = `V칛lkommen ${userName} till min sida 游땙`;

    main.appendChild(mainText);

    logOutBtn.addEventListener("click", () => {
        localStorage.clear();
        location.reload();
    });
}


// Om det inte finns key med namn Anv칛dareNamn i LocalStorage "Som 칛r lika med null" S친 om det inte finns n친t med denna key och h칛mta s친 칛r localstorge lika med null S친 k칬ra vi function loggadInPage
if (JSON.parse(localStorage.getItem('usersId')) === null) {
    logInPage();
}

// Om det finns n친t i localStorge s친 k칬r denna Function som h친ller oss inloggade
else {
    logOutPage();
}
